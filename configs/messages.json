{
    "help": {
        "value": "Итак, это юзер-бот для майнинга $SMTH (something coin)\n\nТекущие команды:\n\n  `h(elp)` - __пишет это сообщение__\n\n  `m(ine) [hash_string:str]` - __на вход ваша строка, которую вы нашли, на выход - выполнилась ли работа, или нет__\n\n  `j(ob) [diff:int]` - __выдает токен для работы__ (1 - легко, 2 - нормально, 3 - сложно)\n\n  `b(alance)` - __выводит ваш баланс__\n\n  `p(ay) [coins:int] [id:int]` - __на вход кол-во монет, которое вы хотите передать, также ID участника, которому вы передаете монеты.__\n\n  `i(nfo)` - __информация о проекте__\n\n\nКак работает сложность:\nСложность делает больше кодировочные сообщения (которые вы \"угадываете\" (формула длинны: 20 * diff). За майнинг каждой монеты на баланс вы получаете diff кол-во монет. Сложность 0 и более 3 округляются до предельных значений.\n\nМайнинг:\nМайнинг работает по такому коду: ```py\n\nalph = ascii_letters + digits\n\ndef gen_str(length=10) -> str:\n    return \"\".join(choice(alph) for i in range(length))\n\ndef hash_coin(i_str: str) -> str:\n    return base64.b64encode(\n        sha256(i_str.encode()).digest()\n    ).decode()\n\ndef start_job(diff: int, token: str, pref: str) -> tuple[str, str]:\n\n    i_str = gen_str(length=20*diff)\n    b64_hashed = hash_coin(pref+i_str)\n    \n    while not token in b64_hashed: # Проверка строки\n        i_str = gen_str(length=20*diff)\n        b64_hashed = hash_coin(pref+i_str)\n    \n    return i_str, b64_hashed\n```",
        "trigers": ["h", "help"]
    },
    "info": {
        "value": "Проект полностью [OpenSource](https://github.com/striter-no/SomethingCoin/)",
        "trigers": ["i", "info"]
    },
    "job": {
        "trigers": ["j", "job"]
    },
    "mine": {
        "trigers": ["m", "mine"]
    },
    "balance": {
        "trigers": ["b", "balance"]
    },
    "pay": {
        "trigers": ["p", "pay"]
    },
    "new": {
        "job": "Вы создали свой аккаунт, для того, чтобы получить работу, еще раз отправьте команду.",
        "mine": "Вы создали свой аккаунт, для того, чтобы майнить $SMTH, получите **работу** (`job`)",
        "balance": "Вы создали свой аккаунт, для того, чтобы майнить $SMTH, получите **работу** (`job`)"
    },
    "exists": {
        "job": "Вы уже получили свою задачу. Если вы хотите ее сбросить, напишите аргумент r(eset)",
        "mine": "Не существует токена для майнинга, получите **работу** (`job`)"
    },
    "ok": {
        "job": "Задача получена, удачи!",
        "job-res": "Задача сброшена, теперь вы можете взять новую.",
        "mine": "Задача завершена, хорошая работа!",
        "pay": "Вы успешно совершили транзакцию!"
    },
    "fail": {
        "mine": "Не получилось, ваша строка не проходит по хэшу.",
        "pay-bal": "Недостаточно средств.",
        "pay-us": "Нет такого пользователя, увы!"
    }
}